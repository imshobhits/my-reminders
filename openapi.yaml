openapi: 3.0.0
info:
  description: The My Reminders REST API
  version: 1.0.0
  title: My Reminders
  contact:
    email: robertmassaioli@atlassian.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
tags:
  - name: Individual reminder
    description: Operations on individual reminders.
  - name: Issue reminders
    description: Reminder operations relative to an issue.
  - name: User reminders
    description: Reminder operations relative to a user.
paths:
  /reminder:
    get:
      operationId: getReminder
      tags:
        - Individual reminder
      summary: Get reminder by id
      description: Get a reminder by the unique id.
      security:
        - api_key: []
      parameters:
        - name: reminderId
          description: The unique identifier of the reminder you are looking for.
          in: query
          required: true
          schema:
            type: number
      responses:
        "200":
          description: Returns the reminder that matches the id if you have access.
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ReminderResponse"
        "400":
          description: Returned if no issueId is provided.
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Respond with an error if no token is provided.
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: |-
            Returned if no issue with the given id can be found or you don't
            have access to it.
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      operationId: addReminder
      tags:
        - Individual reminder
      summary: Create a reminder
      description: >-
        Create a reminder for the current user on the given issue with the
        provided

        message.
      security:
        - api_key: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReminderRequest"
        required: true
      responses:
        "204":
          description: |-
            Returned if the reminder was created successfully.

            This method does not return the id of the created reminder.
        "400":
          description: |-
            Returned if:
              - The request body could not be parsed.
              - The user requesting to make the reminder is not
                the user in the request.
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Returned if no token is provided.
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Returned if the reminder is not successfully persisted.
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      operationId: deleteReminder
      tags:
        - Individual reminder
      summary: Delete a reminder
      description: Delete the reminder with the given id.
      security:
        - api_key: []
      parameters:
        - name: reminderId
          in: query
          required: true
          schema:
            type: number
      responses:
        "204":
          description: Returned if the reminder was deleted successfully.
        "400":
          description: Returned if no 'reminderId' is provided.
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Returned if no token is provided.
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Returned if no reminder with that id could be found for your user.
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /reminders:
    get:
      operationId: getRemindersForIssue
      tags:
        - Issue reminders
      summary: Get reminders for Issue
      description: |-
        Get all of the reminders, for the current user, filtered down to
        a particular Jira issue.
      security:
        - api_key: []
      parameters:
        - name: issueId
          in: query
          required: true
          schema:
            type: number
      responses:
        "200":
          description: All of the current users reminders for the given issue.
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ReminderResponseList"
        "400":
          description: Returned if no issueId was provided.
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Returned if no token is provided.
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /user/reminders:
    get:
      operationId: getAllReminders
      tags:
        - User reminders
      summary: Get my reminders
      description: |-
        Get all of the current users reminders for the current Jira tenant.
        Since this API gets everything you don't need to provide any parameters.
      security:
        - api_key: []
      responses:
        "200":
          description: All of the reminders for the current user.
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ReminderResponseList"
        "403":
          description: Returned if no token is provided.
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      operationId: deleteReminders
      tags:
        - User reminders
      summary: Delete reminders for user
      description: This operation, when given a list of reminder ids, deletes all of them.
      security:
        - api_key: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReminderIdList"
        required: true
      responses:
        "204":
          description: Returned when the reminders have been deleted successfully.
servers:
  - url: https://my-reminders.prod.public.atl-paas.net/rest
components:
  securitySchemes:
    api_key:
      type: apiKey
      name: X-acpt
      in: header
  schemas:
    ReminderIdList:
      title: List of Reminder Ids
      description: A list containing reminder Ids.
      type: object
      additionalProperties: false
      required:
        - pids
      properties:
        pids:
          description: A collection of Id's.
          type: array
          items:
            description: A reminder id
            type: number
            minimum: 0
    ReminderRequest:
      title: Create Reminder Details
      description: The parameters required to create a reminder.
      type: object
      additionalProperties: false
      required:
        - ReminderDate
        - Issue
        - UserAaid
      properties:
        ReminderDate:
          description: The expiry date for the reminder. The date and time that it will be
            sent.
          type: string
          format: date-time
        Issue:
          $ref: "#/components/schemas/IssueDetails"
        UserAaid:
          description: The AAID of the user that this reminder should be created for.
          type: string
        Message:
          description: |-
            The optional message for this reminder, to be sent with the reminder
            itself.
          type: string
          minLength: 1
    IssueDetails:
      title: Issue Details
      description: The basic details that every issue will have.
      type: object
      additionalProperties: false
      required:
        - Id
        - Key
        - Summary
      properties:
        Id:
          description: The id of the issue.
          type: number
          minimum: 0
        Key:
          description: The Key of the issue.
          type: string
          minLength: 1
        Summary:
          description: The summary on the issue.
          type: string
    UserDetails:
      title: User Details
      type: object
      additionalProperties: false
      required:
        - Key
      properties:
        Key:
          description: The unique key of the given user.
          type: string
          minLength: 1
    ReminderResponseList:
      title: List of Reminders
      description: A list of reminders.
      type: array
      items:
        $ref: "#/components/schemas/ReminderResponse"
    ReminderResponse:
      title: Reminder
      description: The standard format for a reminder from the My Reminders service.
      type: object
      additionalProperties: false
      required:
        - ReminderId
        - IssueId
        - IssueKey
        - IssueSummary
        - Date
      properties:
        ReminderId:
          description: The unique identifier for this reminder.
          type: number
          minimum: 0
        IssueId:
          description: The identifier of the Jira issue that this reminder is for.
          type: number
          minimum: 0
        IssueKey:
          description: The Jira issue key that this reminder is for.
          type: string
          minLength: 1
        IssueSummary:
          description: The current Jira summary for this issue.
          type: string
        Message:
          description: The message that the user set for the reminder to help jog their
            memory.
          type: string
          minLength: 1
        Date:
          description: The exact date-time that the reminder will expire.
          type: string
          format: date-time
    ErrorResponse:
      title: Error Response
      description: The standard structure for returning error messages in My Reminders.
      type: object
      additionalProperties: false
      required:
        - errorMessages
      properties:
        errorMessages:
          title: Error Messages
          type: array
          minLength: 1
          items:
            type: string
            minLength: 1